<?xml version="1.0"?>
<!--***********************************************************
	Controller Reference Publisher Node
	Emily Sheetz, NSTGRO VTE 2021

	run either:
		$ roslaunch val_dynacore controller_reference_publisher.launch
		OR
		$ rosrun val_dynacore controller_reference_publisher_node
************************************************************-->
<launch>
	<arg name="controller" default="pose"/>
	<!-- supported controller types:
			"pose": publishes reference pose
			"position": publishes reference position
			"orientation": publishes reference orientation
			"multiobj": publishes reference position and orientation
	-->
	
	<arg name="sim" default="false"/>
	<!-- if not testing in sim, no tf prefix -->
	<arg unless="$(arg sim)" name="tf_prefix" value=""/>
	<!-- if testing in sim, set tf prefix to be same as in ControllerTestNode -->
	<arg if="$(arg sim)" name="tf_prefix" value="val_controller/"/>

	<arg name="recv_ref" default="false"/>
	<!-- if not receiving reference poses, no target pose node -->
	<arg unless="$(arg recv_ref)" name="target_pose_node" value=""/>
	<!-- if receiving reference poses, set target pose node to come from SemanticFrameControllerNode -->
	<arg if="$(arg recv_ref)" name="target_pose_node" value="SemanticFrameControllerNode"/>

	<arg name="debug" default="false"/>
	<arg unless="$(arg debug)" name="launch_prefix" value="" />
	<arg if="$(arg debug)" name="launch_prefix" value="gdb -ex run --args" />

	<node launch-prefix="$(arg launch_prefix)" pkg="val_dynacore" type="controller_reference_publisher_node" name="ControllerReferencePublisherNode" output="screen">
		<param name="controller" value="$(arg controller)"/>
		<param name="tf_prefix" value="$(arg tf_prefix)"/>
		<param name="receive_target" value="$(arg recv_ref)"/>
		<param name="target_pose_node" value="$(arg target_pose_node)"/>
		<!--<param name="" type="" value=""/> -->
	</node>
</launch>
