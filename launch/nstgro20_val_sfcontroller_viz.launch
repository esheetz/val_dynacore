<?xml version="1.0"?>
<launch>
	<arg name="user_names" default="[emily,steven,mark]"/>
	<arg name="launch_footstep_services" default="false"/> <!-- indicates if planning and executing services should be launched -->
	<arg name="vis" default="true"/>

	<rosparam param="user_names" subst_value="True">$(arg user_names)</rosparam>
	<arg name="sim" default="false"/>

	<arg name="waypoints" default="true"/>
	<arg name="stances" default="true"/>

	<!-- Nice Reference at: http://answers.gazebosim.org/question/9403/multi-robot-controller-manager-for-different-robot_descripion/ -->

	<param name="nstgro20_valkyrie_robot_description" textfile="$(find val_dynacore)/RobotSystems/Valkyrie/valkyrie_simple.urdf" />

	<node name="nstgro20_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
		<rosparam param="source_list">[SemanticFrameControllerNode/controllers/input/joint_states]</rosparam>
		<remap from="robot_description" to="nstgro20_valkyrie_robot_description" />
		<remap from="joint_states" to="/nstgro20_valkyrie/joint_states" />
	</node>

	<!-- <node name="nstgro_robot_state_publisher" type="robot_state_publisher" pkg="robot_state_publisher"> -->
	<node name="nstgro20_robot_state_publisher" type="state_publisher" pkg="kinetic_robot_state_publisher">
		<remap from="robot_description" to="nstgro20_valkyrie_robot_description" />
		<remap from="joint_states" to="/nstgro20_valkyrie/joint_states" />
		<param name="tf_prefix" type="string" value="val_controller" />	<!-- we use kinetic_robot_state_publisher so we can use tf_prefix-->
	</node>

	<group if="$(arg vis)">
		<node name="rviz_ik" pkg="rviz" type="rviz" args="-d $(find val_dynacore)/launch/sf-controllers.viz.rviz" required="true" /> <!-- controller visualization with visualizations of 6d task pose(s); when launched this way, robot model WILL NOT show up correctly until tf broadcaster is started between world and pelvis -->
	</group>

	<include file="$(find semantic_frame_pipeline)/launch/sf_waypoint_node.launch">
		<arg name="sim" value="$(arg sim)"/>
	</include>

	<group if="$(arg launch_footstep_services)">
		<include file="$(find val_footstep_planner_executor)/launch/footstep_planner_executor_server_node.launch">
			<arg name="waypoints" value="$(arg waypoints)"/>
			<arg name="stances" value="$(arg stances)"/>
		</include>
	</group>

</launch>